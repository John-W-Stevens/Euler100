// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
// find the sum of the even-valued terms.

const now = require("performance-now");

const problem_2 = limit => {
    let total = 2;
    let n1 = 1, n2 = 2, n3 = 3;
    while (n3 < limit){
        if (n3 % 2 === 0){
            total += n3;
        }
        n1 = n2;
        n2 = n3;
        n3 += n1;
    }
    return total;
}

var start = now();
let solution = problem_2(4000000);
console.log(`${solution} found in ${(now() - start) / 1000} seconds.`)
// 4613732 found in 0.00004729900000000242 seconds.