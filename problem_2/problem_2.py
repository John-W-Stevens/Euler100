# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
# find the sum of the even-valued terms.

import time

def problem_2(limit):
    total = 2 # starting with n2   
    n1, n2, n3 = 1, 2, 3
    while n3 < limit:
        if n3 % 2 == 0:
            total += n3
        n1 = n2
        n2 = n3
        n3 += n1
    return total

start = time.time()
print(f"{problem_2(4000000)} found in {time.time() - start} seconds.")
# 4613732 found in 1.0013580322265625e-05 seconds.
